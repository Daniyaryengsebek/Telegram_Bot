import asyncio #–∞—Å–∏–Ω—Ö—Ä–æ–Ω–æ—Å—Ç—å
import logging #–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
import datetime
from datetime import timedelta  #—Ä–∞–±–æ—Ç–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
import random


#aiogram –∏ –≤—Å—ë —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Telegram API
from aiogram import Bot, types
from aiogram.utils import executor

from aiogram.dispatcher import Dispatcher
from aiogram.types.message import ContentType


from aiogram.types import ReplyKeyboardRemove,ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

#–∫–æ–Ω—Ñ–∏–≥ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
import config
#—Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from database import dbworker
#—Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
import os.path


#–∑–∞–¥–∞—ë–º –ª–æ–≥–∏
logging.basicConfig(level=logging.INFO)


#–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot,storage=MemoryStorage())


#–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
db = dbworker('database.db')

#–∫–Ω–æ–ø–∫–∏
button_aim = KeyboardButton(f'–î–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å {100 - db.count_user()[0]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

#—Ö–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'],state='*')
async def start(message : types.Message):
	#–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
	button_start = KeyboardButton('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–≤—è–∑—ã–≤–∞–µ—Ç –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ø–æ–º—å!')

	magic_start = ReplyKeyboardMarkup(one_time_keyboard=True)

	magic_start.add(button_start)
	await message.answer('–ü—Ä–∏–≤–µ—Çüëã\n\n–≠—Ç–æ Your Bunny Wrote –±–æ—Ç –∏ —è —Å–æ–≤–µ—Ç—É—é –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—èü§†\n–ê –µ—â—ë —è —Å–æ–≤–µ—Ç—É—é –∑–∞–¥–µ—Ä–∂–∞—Ç—å—Å—è —É –Ω–∞—Å –ø–æ–¥–æ–ª—å—à–µ, —É –Ω–∞—Å —Ç—É—Ç –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ\n\nYour Bunny Wrote - –º–µ—Å—Ç–æ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ : \n - —Å–∫–µ–π—Ç–µ—Ä–æ–≤üõπ\n - —Ö–∏–ø—Å—Ç–µ—Ä–æ–≤ü¶π‚Äç‚ôÄÔ∏è \n –∏ –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–ΩüëΩ',reply_markup=magic_start)
	await message.answer_sticker('CAADAgADZgkAAnlc4gmfCor5YbYYRAI')
	if(not db.user_exists(message.from_user.id)):
		#–µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
		db.add_user(message.from_user.username,message.from_user.id,message.from_user.full_name)

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ó–∞–π—Ç–∏ –≤ –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä

@dp.message_handler(lambda message: message.text == '–ó–∞–π—Ç–∏ –≤ –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä Your Bunny –≤—Ä–æ—Ç–∞üåÄ',state='*')
async def magic_start(message : types.Message):
	#–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
	button_need_help = KeyboardButton('–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å ')

	button_give_help = KeyboardButton('–•–æ—á—É –ø–æ–º–æ—á—å')

	button_edit_profile = KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìù')

	button_remove_profile = KeyboardButton('–£–∂–µ –ø–æ–º–æ–≥–ª–∏')


	global button_aim
# –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ —á—Ç–æ —Ç–æ—Ç –¥–æ–±–∞–≤–∏—Ç—å

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã


class CreateProfile(StatesGroup):
	name = State()
	description = State()
	city = State()
	social_link	 = State()
#—Ö–µ–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message: message.text == '',state='*')
async def create_profile(message : types.Message):
	#–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
	button_exit = KeyboardButton('–ù–∞–∑–∞–¥‚ùå')

	menu_exit = ReplyKeyboardMarkup()

	menu_exit.add(button_exit)

	if message.from_user.username != None:
		if(not db.profile_exists(message.from_user.id)):
			await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",reply_markup=menu_exit)
			await CreateProfile.name.set()
		
#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–º—è
@dp.message_handler(state=CreateProfile.name)
async def create_profile_name(message: types.Message, state: FSMContext):
	if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
		await state.finish()
		await magic_start(message)
		return
	if len(str(message.text)) < 35: 
		await state.update_data(profile_name=message.text.lower())
		await message.reply(message.text.title() + ' - –ø*–∑–¥–∞—Ç–æ–µ –∏–º—èüòâ\n–¢–µ–ø–µ—Ä—å –∑–∞–ø–æ–ª–Ω–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ —á—Ç–æ –±—ã –≤—Å–µ –ø–æ–Ω—è–ª–∏ –∫—Ç–æ –∂–µ —Ç—ã : \n - –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–ΩüëΩ\n - –¥—É—Ä–∞–∫ü§° \n - –≥–∏–≥–∞–Ω—Ç –º—ã—Å–ª–∏üß† \n - –æ—Ç–µ—Ü —Ä—É—Å—Å–∫–æ–π –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏üë™ \n\n–±–µ–∑ —ç—Ç–æ–≥–æ –Ω–∏–∫–∞–∫ –ø—Ä–æ—Å—Ç–∏ :9')
		await CreateProfile.next()
	else:
		await message.answer(cus_ans.random_reapeat_list())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return
#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
@dp.message_handler(state=CreateProfile.description)
async def create_profile_description(message: types.Message, state: FSMContext):
	if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
		await state.finish()
		await magic_start(message)
		return
	if len(message.text) < 35: 
		await state.update_data(profile_description=message.text)
		await message.answer('–° –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?')
		await CreateProfile.next()
	else:
		await message.answer(cus_ans.random_reapeat_list())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return
#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ 
@dp.message_handler(state=CreateProfile.city)
async def create_profile_description(message: types.Message, state: FSMContext):
	if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
		await state.finish()
		await magic_start(message)
		return
	

	#–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
	button_male = KeyboardButton('–ú—É–∂—á–∏–Ω–∞')

	button_wooman = KeyboardButton('–ñ–µ–Ω—â–∏–Ω–∞')

	button_potato = KeyboardButton('–ö–∞—Ä—Ç–æ—à–∫–∞ü•î')

	sex_input = ReplyKeyboardMarkup() 
	sex_input.add(button_male,button_wooman,button_potato)

	await message.photo[-1].download('photo_user/' + str(message.from_user.id) + '.jpg')
	await message.answer('–ü–∏–ø–µ—Ü —Ç—ã —Å–æ—Å–∫–∞)\n\n–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ,—É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª(–Ω–µ —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥ —Ç–æ–±–æ–π:)',reply_markup=sex_input)
	await CreateProfile.next()
#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–∞ 
@dp.message_handler(state=CreateProfile.sex)
async def create_profile_sex(message: types.Message, state: FSMContext):
	if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
		await state.finish()
		await magic_start(message)
		return
	if message.text == '–ú—É–∂—á–∏–Ω–∞' or message.text == '–ñ–µ–Ω—â–∏–Ω–∞':
		await state.update_data(profile_sex=message.text.lower())
		await message.answer('–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!\n–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å\n\n–î–∞–≤–∞–π –∂–µ —É–∑–Ω–∞–µ–º —Ç–≤–æ–π –≤–æ–∑–≤—Ä–∞—Å—Ç, —á—Ç–æ –±—ã –Ω–µ —Å–∏–¥–µ—Ç—å –≤–æ—Å—å–º—ë—Ä–∫—É –ª–µ—Ç –µ—Å–ª–∏ —á—Ç–æüëÆ‚Äç‚ôÇÔ∏è ')
		await CreateProfile.next()
	elif message.text == '–ö–∞—Ä—Ç–æ—à–∫–∞ü•î':
		await message.answer(cus_ans.joke_first())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return
	else:
		await message.answer(cus_ans.random_reapeat_list())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Å—Ç–∞
@dp.message_handler(state=CreateProfile.age)
async def create_profile_age(message: types.Message, state: FSMContext):
	try:
		if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
			await state.finish()
			await magic_start(message)
			return
		if int(message.text) < 6:
			await message.answer('–æ–πü§≠\n–¢—ã —á—ë—Ç –º–∞–ª–æ–≤–∞—Ç...')
			await message.answer(cus_ans.random_reapeat_list())

			#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
			return
		elif int(message.text) > 54:
			await message.answer('–ü–∞–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫üë®‚Äç')
			await message.answer(cus_ans.random_reapeat_list())

			#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
			return
		elif int(message.text) > 6 and int(message.text) < 54:
			await state.update_data(profile_age=message.text)
			#–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
			button_skip = KeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')

			skip_input = ReplyKeyboardMarkup(one_time_keyboard=True) 
			skip_input.add(button_skip)
			await message.answer('–ó–∞‚Ññ–±–∏—Å—å!!\n–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ - —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å\n–ï—Å–ª–∏ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏—è - –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚û°üîú',reply_markup=skip_input)
			await CreateProfile.next()
	except:
		await message.answer(cus_ans.random_reapeat_list())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return
#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å
@dp.message_handler(state=CreateProfile.social_link)
async def create_profile_social_link(message: types.Message, state: FSMContext):
	try:
		if str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
			await state.finish()
			await magic_start(message)
			return
		if str(message.text) == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
			await message.answer('–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
			user_data = await state.get_data()
			db.create_profile(message.from_user.id,message.from_user.username,str(user_data['profile_name']),str(user_data['profile_description']),str(user_data['profile_city']),'photo/' + str(message.from_user.id) + '.jpg',str(user_data['profile_sex']),str(user_data['profile_age']),None) #self,telegram_id,telegram_username,name,description,city,photo,sex,age,social_link
			await state.finish()
		elif str(message.text).startswith('https://'):
			await state.update_data(profile_link=message.text)
			await message.answer('–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
			user_data = await state.get_data()
			db.create_profile(message.from_user.id,message.from_user.username,str(user_data['profile_name']),str(user_data['profile_description']),str(user_data['profile_city']),'photo/' + str(message.from_user.id) + '.jpg',str(user_data['profile_sex']),str(user_data['profile_age']),str(user_data['profile_link'])) #self,telegram_id,telegram_username,name,description,city,photo,sex,age,social_link
			await state.finish()
			await magic_start(message)
		if (not str(message.text) == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å') and (not str(message.text).startswith('https://')) :
			await message.answer('–°—Å—ã–ª–∫–∞ –∫–æ—Ä—è–≤–∞—è!!\n\n–û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://')

			return


	except:
		await message.answer(cus_ans.random_reapeat_list())
		#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
		return

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message: message.text == '–£–¥–∞–ª–∏—Ç—åüóë')
async def delete_profile(message : types.Message):
	try:
		db.delete_profile(message.from_user.id)
		await message.answer('–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
		await magic_start(message)
	except:
		await message.answer(cus_ans.random_reapeat_list())
		return

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message: message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìù')
async def edit_profile(message : types.Message):
	try:
		if(not db.profile_exists(message.from_user.id)):
			await message.answer('–£ —Ç–µ–±—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã!')
		elif(db.profile_exists(message.from_user.id)) :
			photo = open('photo_user/' + str(message.from_user.id) + '.jpg','rb')
			#–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
			button_again = KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüîÑ')

			button_edit_description = KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù')

			button_edit_age = KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂')

			button_cancel = KeyboardButton('–ù–∞–∑–∞–¥‚ùå')

			edit_profile = ReplyKeyboardMarkup(one_time_keyboard=True) 
			edit_profile.add(button_again,button_edit_description,button_edit_age,button_cancel)
			caption = '–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n–ò–º—è - ' + str(db.all_profile(str(message.from_user.id))[0][3]).title() + '\n–û–ø–∏—Å–∞–Ω–∏–µ - ' + str(db.all_profile(str(message.from_user.id))[0][4]) + '\n–ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–æüåé - ' + str(db.all_profile(str(message.from_user.id))[0][5]).title() + '\n–°–∫–æ–ª—å–∫–æ –≥–æ–¥–∏–∫–æ–≤?) - ' + str(db.all_profile(str(message.from_user.id))[0][8])  
			await message.answer_photo(photo,caption=caption,reply_markup=edit_profile)
			photo.close()
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		print(e)
		return

#—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –∑–∞–Ω–æ–≤–æ
@dp.message_handler(lambda message: message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüîÑ')
async def edit_profile_again(message : types.Message):
	try:
		db.delete_profile(message.from_user.id)
		await create_profile(message)

	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		print(e)
		return

#–∫–ª–∞—Å—Å –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM
class EditProfile(StatesGroup):
	description_edit = State()
	age_edit = State()

#—Ö–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Å—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã

@dp.message_handler(lambda message: message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂' or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù')
async def edit_profile_age(message : types.Message):
	try:
		#–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã
		button_cancel = KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

		button_cancel_menu = ReplyKeyboardMarkup(one_time_keyboard=True)

		button_cancel_menu.add(button_cancel)

		if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂':
			await message.answer('–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –≤–æ–∑–≤—Ä–∞—Å—Ç',reply_markup=button_cancel_menu)
			await EditProfile.age_edit.set()
		elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù':
			await message.answer('–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ —Ö–∞–π–ø –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã!',reply_markup=button_cancel_menu)
			await EditProfile.description_edit.set()
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		print(e)
		return
@dp.message_handler(state=EditProfile.age_edit)
async def edit_profile_age_step2(message: types.Message, state: FSMContext):
	try:
		if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
			await state.finish()
			await magic_start(message)

			return
		elif int(message.text) < 6:
			await message.answer('–æ–πü§≠\n–¢—ã —á—ë—Ç –º–∞–ª–æ–≤–∞—Ç...')
			await message.answer(cus_ans.random_reapeat_list())

			#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
			return
		elif int(message.text) > 54:
			await message.answer('–ü–∞–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫üë®‚Äç')
			await message.answer(cus_ans.random_reapeat_list())

			#–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
			return
		elif int(message.text) > 6 and int(message.text) < 54:
			await message.answer('–ú–∞–ª—ã–π –ø–æ–≤–∑—Ä–æ—Å–ª–µ–ª –ø–æ–ª—É—á–∞–µ—Ç—Å—èü§ó\n\n–í–æ–∑–≤—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ë–Ω!')
			await state.update_data(edit_profile_age=message.text)
			user_data = await state.get_data()

			db.edit_age(user_data['edit_profile_age'],str(message.from_user.id))
			await state.finish()	
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		print(e)
		return
@dp.message_handler(state=EditProfile.description_edit)
async def edit_profile_description_step2(message: types.Message, state: FSMContext):
	try:
		if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
			await state.finish()
			await magic_start(message)

			return
		await message.answer('–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±—Ä–æ–¥–∏\n\n–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
		await state.update_data(edit_profile_description=message.text)
		user_data = await state.get_data()

		db.edit_description(user_data['edit_profile_description'],str(message.from_user.id))
		await state.finish()
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		print(e)
		return

@dp.message_handler(lambda message: message.text == '–ù–∞–∑–∞–¥‚ùå')
async def exit(message : types.Message):
	await magic_start(message)



#–∫–ª–∞—Å—Å –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM
class SearchProfile(StatesGroup):
	city_search = State()
	in_doing = State()
	
#—Ö–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∞–Ω–∫–µ—Ç–∞–º
@dp.message_handler(lambda message: message.text == '–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ—á–∫–∞üîç')
async def search_profile(message : types.Message):
	try:
		if db.profile_exists(message.from_user.id) == False:
			await message.answer('–£ —Ç–µ–±—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã, –∑–∞–ø–æ–ª–Ω–∏ –µ—ë –∞ –ø–æ—Ç–æ–º –ø—Ä–∏—Ö–æ–¥–∏ —Å—é–¥–∞!')
		else:
			await message.answer('–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–µ–ª–æ–≤–µ—á–∫–∞ :)')
			await SearchProfile.city_search.set()
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		await state.finish()
		print(e)
		return

@dp.message_handler(state=SearchProfile.city_search)
async def seach_profile_step2(message: types.Message, state: FSMContext):
	try:
		await state.update_data(search_profile_city=message.text.lower())

		user_data = await state.get_data()

		db.set_city_search(str(user_data['search_profile_city']),str(message.from_user.id))
		if (bool(len(db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))))):
			try:
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			except:
				db.edit_zero_profile_status(message.from_user.id)
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			
			db.edit_profile_status(str(message.from_user.id),db.search_profile_status(str(message.from_user.id))[0])
			
			#–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏
			button_like = KeyboardButton('üëç')

			button_dislike = KeyboardButton('üëé')

			button_exit = KeyboardButton('–ù–∞–∑–∞–¥‚ùå')

			mark_menu = ReplyKeyboardMarkup()

			mark_menu.add(button_dislike,button_like,button_exit)

			name_profile = str(db.get_info(profile_id)[3])
			age_profile = str(db.get_info(profile_id)[8])
			description_profile = str(db.get_info(profile_id)[4])
			social_link_profile = str(db.get_info(profile_id)[9])
			photo_profile = open('photo_user/' + str(profile_id) + '.jpg','rb')

			city = str(db.get_info_user(message.from_user.id)[6]).title()

			final_text_profile = f'–°–º–æ—Ç—Ä–∏, –∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è –Ω–∞—à—ë–ª‚ò∫Ô∏è\n\n{name_profile},{age_profile},{city}\n{description_profile}'

			await message.answer_photo(photo_profile,caption=final_text_profile,reply_markup=mark_menu)

			

			await SearchProfile.next()
		else:
			await message.answer('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –∏–ª–∏ —Ç–∞–º –Ω–µ—Ç –∞–Ω–∫–µ—Ç :(')
			await state.finish()
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list()) 
		await state.finish()
		await magic_start(message)
		print(e)

@dp.message_handler(state=SearchProfile.in_doing)
async def seach_profile_step3(message: types.Message, state: FSMContext):
	try:
		if str(message.text) == 'üëç':
			if str(message.text) == '/start' or str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
				await state.finish()
				await magic_start(message)

			user_data = await state.get_data()

			try:
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			except IndexError:
				db.edit_zero_profile_status(message.from_user.id)
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			except Exception as e:
				print(e)
				await state.finish()
				await magic_start(message)
			db.edit_profile_status(str(message.from_user.id),db.search_profile_status(str(message.from_user.id))[0])
			name_profile = str(db.get_info(profile_id)[3])
			age_profile = str(db.get_info(profile_id)[8])
			description_profile = str(db.get_info(profile_id)[4])
			social_link_profile = str(db.get_info(profile_id)[9])
			photo_profile = open('photo_user/' + str(profile_id) + '.jpg','rb')

			city = str(user_data['search_profile_city']).title()

			final_text_profile = f'–°–º–æ—Ç—Ä–∏, –∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è –Ω–∞—à—ë–ª‚ò∫Ô∏è\n\n{name_profile},{age_profile},{city}\n{description_profile}'

			await message.answer_photo(photo_profile,caption=final_text_profile)
			
			name_profile_self = str(db.get_info(str(message.from_user.id))[3])
			age_profile_self = str(db.get_info(str(message.from_user.id))[8])
			description_profile_self = str(db.get_info(str(message.from_user.id))[4])
			social_link_profile_self = str(db.get_info(str(message.from_user.id))[9])
			photo_profile_self = open('photo_user/' + str(message.from_user.id) + '.jpg','rb')

			city_self = str(user_data['search_profile_city']).title()
			final_text_profile_self = f'–¢–æ–±–æ–π –∫—Ç–æ —Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è!\n–°–∞–º –≤ —à–æ–∫–µüòÆ..\n\n{name_profile_self},{age_profile_self},{city_self}\n{description_profile_self}\n\n–ß–µ–≥–æ —Ç—ã –∂–¥—ë—à—å,–±–µ–≥–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è - @{str(message.from_user.username)}'
			await bot.send_photo(profile_id,photo_profile_self,caption=final_text_profile_self)
			return
			await state.finish()
		elif str(message.text) == 'üëé':
			if str(message.text) == '/start' or str(message.text) == '–ù–∞–∑–∞–¥‚ùå':
				await state.finish()
				await magic_start(message)

			user_data = await state.get_data()

			try:
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			except IndexError:
				db.edit_zero_profile_status(message.from_user.id)
				profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[6]),str(db.get_info(str(message.from_user.id))[8]),str(db.get_info(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
			except Exception as e:
				print(e)
				await state.finish()
				await magic_start(message)
			db.edit_profile_status(str(message.from_user.id),db.search_profile_status(str(message.from_user.id))[0])
			name_profile = str(db.get_info(profile_id)[3])
			age_profile = str(db.get_info(profile_id)[8])
			description_profile = str(db.get_info(profile_id)[4])
			social_link_profile = str(db.get_info(profile_id)[9])
			photo_profile = open('photo_user/' + str(profile_id) + '.jpg','rb')

			city = str(user_data['search_profile_city']).title()

			final_text_profile = f'–°–º–æ—Ç—Ä–∏, –∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è –Ω–∞—à—ë–ª‚ò∫Ô∏è\n\n{name_profile},{age_profile},{city}\n{description_profile}'

			await message.answer_photo(photo_profile,caption=final_text_profile)
		else:
			await state.finish()
			await magic_start(message)
	except Exception as e:
		await message.answer(cus_ans.random_reapeat_list())
		await state.finish()
		await magic_start(message)
		print(e)
		return


executor.start_polling(dp, skip_updates=True)